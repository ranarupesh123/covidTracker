{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","Grid","container","spacing","justify","item","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","coronaImage","alt","image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,4NCiDpJC,EA3CD,SAAC,GAAyD,IAAD,IAAtDC,KAAQC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,WAErD,OAAIH,EAIF,yBAAKI,UAAU,oBACb,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,UAClC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGT,UAAYU,IAAGC,IAAOC,KAAMD,IAAOE,WAC5E,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CAASC,MAAS,EAAGC,IAAMxB,EAAUyB,MAAOC,SAAY,IAAKC,UAAU,OAEnF,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBAC9C,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAGJ,kBAACjB,EAAA,EAAD,CAAMI,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGT,UAAYU,IAAGC,IAAOC,KAAMD,IAAOd,YAC5E,kBAACiB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CAASC,MAAS,EAAGC,IAAMvB,EAAUwB,MAAOC,SAAY,IAAKC,UAAU,OAEzE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,2CAGJ,kBAACjB,EAAA,EAAD,CAAMI,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGT,UAAYU,IAAGC,IAAOC,KAAMD,IAAOb,SAC5E,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CAASC,MAAS,EAAGC,IAAMtB,EAAOuB,MAAOC,SAAY,IAAKC,UAAU,OAEtE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,2CAhCD,a,yBCRLQ,EAAM,iCAEEC,EAAS,uCAAG,WAAOC,GAAP,6BAAAC,EAAA,6DACnBC,EAAgBJ,EACjBE,IACDE,EAAa,UAAMJ,EAAN,sBAAuBE,IAHf,kBAOyCG,IAAMC,IAAIF,GAPnD,2BAOfnC,KAAQC,EAPO,EAOPA,UAAUC,EAPH,EAOGA,UAAUC,EAPb,EAOaA,OAAOC,EAPpB,EAOoBA,WAEpCkC,EAAe,CACnBrC,YACAC,YACAC,SACAC,cAboB,kBAefkC,GAfe,kCAiBpBC,QAAQC,IAAR,MAjBoB,0DAAH,sDAqBVC,EAAc,uCAAG,gCAAAP,EAAA,+EAELE,IAAMC,IAAN,UAAaN,EAAb,WAFK,uBAEnB/B,EAFmB,EAEnBA,KAEDsC,EAAetC,EAAK0C,KAAI,SAACC,GAAD,MAAc,CAC1C1C,UAAW0C,EAAU1C,UAAU2C,MAC/BzC,OAASwC,EAAUxC,OAAOyC,MAC1BC,KAAOF,EAAUG,eAPO,kBASnBR,GATmB,gCAW1BC,QAAQC,IAAR,MAX0B,yDAAH,qDAedO,EAAc,uCAAG,8BAAAb,EAAA,+EAEOE,IAAMC,IAAN,UAAaN,EAAb,eAFP,uBAEbiB,EAFa,EAEnBhD,KAAMgD,UAFa,kBAGnBA,EAAUN,KAAI,SAACT,GAAD,OAAWA,EAAQgB,SAHd,gCAM1BV,QAAQC,IAAR,MAN0B,yDAAH,qD,yBC+BZU,EAlED,SAAC,GAAgD,IAAD,IAA9ClD,KAAMC,EAAwC,EAAxCA,UAAUC,EAA8B,EAA9BA,UAAUC,EAAoB,EAApBA,OAAQ8B,EAAY,EAAZA,QAAY,EAC3BkB,mBAAS,IADkB,mBACrDR,EADqD,KAC3CS,EAD2C,KAG5DC,qBAAU,YACM,uCAAG,sBAAAnB,EAAA,kEACbkB,EADa,SACMX,IADN,6EAAH,qDAIda,KACA,IAGJ,IAAMC,EACJZ,EAAUa,OAEV,kBAAC,IAAD,CACExD,KACC,CACEyD,OAAQd,EAAUD,KAAI,qBAAEG,QACxBa,SAAU,CAAC,CACT1D,KAAK2C,EAAUD,KAAI,qBAAEzC,aACrB0D,MAAQ,WACRC,YAAa,UACbC,MAAK,GAEJ,CACE7D,KAAK2C,EAAUD,KAAI,qBAAEvC,UACrBwD,MAAQ,SACRC,YAAa,MACbE,gBAAgB,oBAChBD,MAAK,OAKb,KAGEE,EACJ9D,EAEE,kBAAC,IAAD,CACAD,KAAM,CACJyD,OAAQ,CAAC,WAAW,YAAY,UAChCC,SAAU,CAAC,CACTC,MAAO,SACPG,gBAAkB,CAAC,oBAAoB,oBAAoB,qBAC3D9D,KAAO,CAACC,EAAUyB,MAAMxB,EAAUwB,MAAMvB,EAAOuB,UAInDsC,QAAS,CACPC,OAAO,CAACC,SAAQ,GAChBC,MAAO,CAACD,SAAQ,EAAME,KAAK,oBAAD,OAAqBnC,OAE7C,KAIN,OACE,yBAAK5B,UAAWW,IAAOT,WAChB0B,EAAQ8B,EAASR,I,mCC1Cbc,EAnBO,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,oBAAwB,EACDnB,mBAAS,IADR,mBACvCoB,EADuC,KACtBC,EADsB,KAS9C,OANAnB,qBAAU,YACM,uCAAG,sBAAAnB,EAAA,kEACfsC,EADe,SACSzB,IADT,6EAAH,qDAGdO,KACA,CAACkB,IAED,kBAACC,EAAA,EAAD,CAAapE,UAAWW,IAAO0D,aAC7B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAKR,EAAoBQ,EAAEC,OAAOrD,SACxE,4BAAQA,MAAQ,IAAhB,UACC6C,EAAiB7B,KAAI,SAACT,EAAQ+C,GAAT,OAAa,4BAAQC,IAAKD,EAAGtD,MAAOO,GAAUA,S,kCCgB7DiD,E,4MA3BbC,MAAQ,CACJnF,KAAO,GACPiC,QAAQ,I,EAQZqC,oB,uCAAsB,WAAOrC,GAAP,eAAAC,EAAA,sEACMF,EAAUC,GADhB,OACdmD,EADc,OAEpB,EAAKC,SAAS,CAACrF,KAAOoF,EAAYnD,QAASA,IAFvB,2C,wPALOD,I,OAArBoD,E,OAENE,KAAKD,SAAS,CAACrF,KAAKoF,I,qIAOZ,IAAD,EACgBE,KAAKH,MAArBnF,EADA,EACAA,KAAKiC,EADL,EACKA,QACZ,OACI,yBAAK5B,UAAWW,IAAOT,WACrB,yBAAKgF,IAAKC,IAAaC,IAAI,WAAWpF,UAAWW,IAAO0E,QACxD,kBAAC,EAAD,CAAQ1F,KAAMA,IACd,kBAAC,EAAD,CAAesE,oBAAqBgB,KAAKhB,sBACzC,kBAAC,EAAD,CAAOtE,KAAMA,EAAMiC,QAASA,S,GAtBpB0D,IAAMC,WCDxBC,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,eAAe,U,mBCJ/CnG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCDhCD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.b3e9fafd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2R6r4\",\"card\":\"Cards_card__1XhPN\",\"infected\":\"Cards_infected__31u57\",\"recovered\":\"Cards_recovered__pxgVb\",\"deaths\":\"Cards_deaths__gPoGe\"};","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\n\r\nconst Cards = ({ data : {confirmed, recovered, deaths, lastUpdate}}) =>{\r\n  //console.log(confirmed);\r\n  if(!confirmed){\r\n    return '..Loading';\r\n  }\r\n  return(\r\n    <div className=\"styles.container\">\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className ={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start = {0} end ={confirmed.value} duration = {2.5} separator=\",\" />\r\n              </Typography>\r\n  <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of Active Cases of COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className ={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start = {0} end ={recovered.value} duration = {2.5} separator=\",\" />\r\n              </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of Recovered Cases of COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className ={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start = {0} end ={deaths.value} duration = {2.5} separator=\",\" />\r\n              </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of Deaths caused by COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\n export const fetchData = async (country) =>{\r\n   let changeableUrl = url;\r\n   if(country){\r\n     changeableUrl = `${url}/countries/${country}`\r\n   }\r\n\r\n  try {\r\n    const {data : {confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\r\n\r\n    const modifiedData = {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate\r\n    }\r\n    return modifiedData;\r\n  } catch (error) {\r\n      console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async ()=>{\r\n  try {\r\n    const {data} = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData)=>({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths : dailyData.deaths.total,\r\n      date : dailyData.reportDate\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {data:{countries}} = await axios.get(`${url}/countries`);\r\n    return countries.map((country)=>country.name);\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths},country}) =>{\r\n  const [dailyData,setDailyData] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    const fetchAPI = async ()=>{\r\n        setDailyData(await fetchDailyData());\r\n    }\r\n    //console.log(dailyData)\r\n    fetchAPI();\r\n  },[]);\r\n\r\n\r\nconst lineChart = (\r\n  dailyData.length?\r\n  (\r\n  <Line\r\n    data={\r\n     {\r\n       labels: dailyData.map(({date})=> date),\r\n       datasets: [{\r\n         data:dailyData.map(({confirmed})=>confirmed),\r\n         label : 'Infected',\r\n         borderColor :'#3333ff',\r\n         fill:true,\r\n        },\r\n          {\r\n            data:dailyData.map(({deaths})=>deaths),\r\n            label : 'Deaths',\r\n            borderColor :'red',\r\n            backgroundColor:'rgba(255,0,0,0.5)',\r\n            fill:true,\r\n           }],\r\n     }\r\n    }\r\n  />\r\n  ):null\r\n);\r\n\r\nconst barChart = (\r\n  confirmed?\r\n  (\r\n    <Bar\r\n    data={{\r\n      labels :['Infected','Recovered','Deaths'],\r\n      datasets: [{\r\n        label :\"People\",\r\n        backgroundColor : ['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\r\n        data : [confirmed.value,recovered.value,deaths.value]\r\n      }]\r\n\r\n    }}\r\n    options={{\r\n      legend:{display:false},\r\n      title :{display:true ,text:`Current state in ${country}`}\r\n    }}\r\n    />):null\r\n  );\r\n\r\n\r\n  return(\r\n    <div className={styles.container}>\r\n          {country?barChart:lineChart}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Chart;","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) =>{\r\n  const [fetchedCountries,setFetchCountries] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    const fetchAPI = async () => {\r\n      setFetchCountries(await fetchCountries());\r\n    }\r\n    fetchAPI();\r\n  },[setFetchCountries])\r\n  return(\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n        <option value = \"\">Global</option>\r\n        {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport {Chart,Cards,CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n      data : {},\r\n      country:'',\r\n  }\r\n  async componentDidMount() {\r\n    const fetchedData =  await fetchData();\r\n\r\n    this.setState({data:fetchedData});\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({data : fetchedData,country: country});\r\n  }\r\n  render() {\r\n    const {data,country} = this.state;\r\n    return(\r\n        <div className={styles.container}>\r\n          <img src={coronaImage} alt=\"COVID-19\" className={styles.image}/>\r\n          <Cards  data={data}/>\r\n          <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n          <Chart data={data} country={country}/>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App/>,document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1n68k\",\"image\":\"App_image__EH6QD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2zWhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__39NUM\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}